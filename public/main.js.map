{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth-guard.service.ts","./src/app/services/auth.interceptor.ts","./src/app/services/socketio.service.ts","./src/app/services/user.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/dashboard', pathMatch: 'full'},\n  {\n    path: 'dashboard',\n    component: UsersComponent,\n    canActivate: [AuthGuardService]\n  },\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  isLoggedIn = this.userService.isLoggedIn;\n}\n","<div class=\"header\">\n    <h4>\n        <i class=\"fa fa-envelope\"></i> Chat Application\n    </h4>\n    <button (click)=\"logout()\" *ngIf=\"isLoggedIn()\" class=\"btn btn-danger btn-sm\">Logout</button>\n    <div *ngIf=\"!isLoggedIn()\">\n        <a class=\"btn btn-primary\" href=\"/login\">Login</a>\n        <a class=\"btn btn-secondary ml-2\" href=\"/register\">Register</a>\n    </div>\n</div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserService } from './services/user.service';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { SocketioService } from './services/socketio.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    AuthGuardService,\n    SocketioService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public user = {\n    username: '',\n    password: ''\n  }\n\n  busy = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.busy = true;\n    this.userService.login(this.user).subscribe((res: any) => {\n      this.router.navigate(['/']);\n    });\n  }\n\n}\n","<form #loginForm=\"ngForm\" (ngSubmit)=\"login()\" class=\"login-form\">\n    <div class=\"heading\">Login</div>\n    <div class=\"box\">\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input id=\"username\" \n                required class=\"form-control\" \n                placeholder=\"username\" minlength=\"1\" \n                [(ngModel)]=\"user.username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" \n                required id=\"password\" \n                minlength=\"1\" class=\"form-control\" \n                placeholder=\"password\" name=\"password\"\n                [(ngModel)]=\"user.password\">\n        </div>\n        <div class=\"submit-container\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.form.valid\">\n                Login <i class=\"fa fa-spin spinner\" *ngIf=\"busy\"></i>\n            </button>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  user = {\n    first_name: '',\n    last_name: '',\n    username: '',\n    password: '',\n    confirm_password: ''\n  }\n\n  busy = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    this.userService.register(this.user).subscribe(() => {\n      this.router.navigate(['..', 'login'], {relativeTo: this.route});\n    });\n  }\n\n}\n","<form #registerForm=\"ngForm\" (ngSubmit)=\"register()\" class=\"register-form\">\n    <div class=\"heading\">Register</div>\n    <div class=\"box\">\n        <div class=\"form-group\">\n            <label for=\"first_name\">First name</label>\n            <input id=\"first_name\" \n                required class=\"form-control\" \n                placeholder=\"first name\" minlength=\"1\" \n                [(ngModel)]=\"user.first_name\" name=\"first_name\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"first_name\">Last name</label>\n            <input id=\"last_name\" \n                required class=\"form-control\" \n                placeholder=\"last name\" minlength=\"1\" \n                [(ngModel)]=\"user.last_name\" name=\"last_name\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input id=\"username\" \n                required class=\"form-control\" \n                placeholder=\"username\" minlength=\"1\" \n                [(ngModel)]=\"user.username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" \n                required id=\"password\" \n                minlength=\"1\" class=\"form-control\" \n                placeholder=\"password\" name=\"password\"\n                [(ngModel)]=\"user.password\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"confirm_password\">Confirm Password</label>\n            <input type=\"password\" \n                required id=\"confirm_password\" \n                class=\"form-control\" \n                placeholder=\"re-enter password\" name=\"confirm_password\"\n                [(ngModel)]=\"user.confirm_password\">\n        </div>\n        <div class=\"submit-container\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.form.valid\">\n                Register <i class=\"fa fa-spin spinner\" *ngIf=\"busy\"></i>\n            </button>\n        </div>\n    </div>\n</form>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(\n        public router: Router,\n        public userService: UserService\n    ) {}\n    canActivate(): boolean {\n        if(!this.userService.isLoggedIn()) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token;\n    try {\n      token = JSON.parse(localStorage.getItem('user')).token;\n    } catch(e) {\n      token = null;\n    }\n    req = req.clone({\n      setHeaders: {\n        'Content-Type' : 'application/json; charset=utf-8',\n        'Accept'       : 'application/json',\n        'Authorization': `token ${token}`,\n      },\n    });\n\n    return next.handle(req);\n  }\n}","import * as io from 'socket.io-client';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable()\nexport class SocketioService {\n    socket;\n    newEvent$ = new BehaviorSubject<any>(null);\n    private isConnected = true;\n\n    constructor() {\n        this.socket = io(environment.SOCKET_ENDPOINT);\n        this.subscribeEvent('message');\n    }\n\n    subscribeEvent(event: string) {\n        this.socket.on(event, (data: any) => {\n            this.newEvent$.next({event: event, data: data});\n        });\n    }\n\n    disconnect() {\n        this.socket.disconnect();\n        this.isConnected = false;\n    }\n\n    connect() {\n        if(!this.isConnected) {\n            this.socket.connect();\n            this.subscribeEvent('message');\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class UserService {\n\n    private api = '/api/v1';\n\n    constructor(\n        private http: HttpClient\n    ) {\n        \n    }\n\n    register(user: any) {\n        const endpoint = this.api+'/register';\n        return this.http.post(endpoint, user);\n    }\n\n    login(user: {username: string, password: string}) {\n        const endpoint = `${this.api}/login`;\n        return this.http.post(endpoint, {\n            username: user.username,\n            password: user.password\n        }).pipe(tap((res: any) => localStorage.setItem('user', JSON.stringify({\n            username: user.username,\n            token: res.token\n        }))));\n    }\n\n    isLoggedIn() {\n        try {\n            const user = JSON.parse(localStorage.getItem('user'));\n            if(user.token) {\n                return true;\n            }\n            return false;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    loadUsers() {\n        const endpoint = `${this.api}/users`;\n        return this.http.get(endpoint);\n    }\n\n    get user(): any {\n        try {\n            return JSON.parse(localStorage.getItem('user'));\n        } catch(e) {\n            return {};\n        }\n    }\n\n    loadChat(username) {\n        const endpoint = `${this.api}/chat/${username}`;\n        return this.http.get(endpoint);\n    }\n\n    sendMessage(username, message) {\n        const endpoint = `${this.api}/chat/${username}`;\n        return this.http.post(endpoint, {\n            message: message\n        });\n    }\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { SocketioService } from '../services/socketio.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n\n  public users = [];\n  public loadingUsers = true;\n  public chatBoxes = [];\n  public opened = {};\n  private subs = new Subscription();\n\n  constructor(\n    private userService: UserService,\n    private socket: SocketioService\n  ) {\n    this.subs.add(this.userService.loadUsers().subscribe((res: any) => {\n      this.users = res.data.filter((u: any) => u.username != userService.user.username);\n      this.loadingUsers = false;\n    }));\n  }\n\n  ngOnInit(): void {\n    this.socket.connect();\n    this.subs.add(this.socket.newEvent$.subscribe((res: any) => {\n      if(res && this.chatBoxes.length>0 && res.event == 'message') {\n        const message = res.data;\n        for(let num in this.chatBoxes) {\n          this.appendMessage(parseInt(num), message);\n        }\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n    this.socket.disconnect();\n  }\n\n  appendMessage(num: number, message) {\n    const to = this.chatBoxes[num].user.username;\n    const from = this.userService.user.username;\n    if((message.from == from && message.to == to) || (message.from == to && message.to == from)) {\n      this.chatBoxes[num].chat.push(message);\n    }\n  }\n\n  openChatBox(user: any) {\n    if(this.chatBoxes.length == 2) {\n      // should not open more than 2 chat boxes\n      return;\n    }\n    if(user.username in this.opened) {\n      return;\n    }\n    this.chatBoxes.push({\n      user: user,\n      currMessage: \"\",\n      sendingMsg: false,\n      chat: [],\n      minimized: false\n    });\n    this.subs.add(this.userService.loadChat(user.username).subscribe((res: any) => {\n      this.chatBoxes[this.chatBoxes.length-1].chat = res.data;\n    }));\n  }\n\n  sendMessage(num: number) {\n    if(this.chatBoxes[num].sendingMsg) {\n      return;\n    }\n    this.chatBoxes[num].sendingMsg = true;\n    this.subs.add(this.userService.sendMessage(this.chatBoxes[num].user.username, this.chatBoxes[num].currMessage)\n    .subscribe((res: any) => {\n      this.chatBoxes[num].currMessage = \"\";\n      this.chatBoxes[num].sendingMsg = false;\n    }));\n  }\n\n  closeChatBox(num: number) {\n    delete this.opened[this.chatBoxes[num].user.username];\n    this.chatBoxes.splice(num, 1);\n  }\n\n  minimizeChatBox(num: number) {\n    this.chatBoxes[num].minimized = !this.chatBoxes[num].minimized;\n  }\n\n}\n","<div class=\"users-box\">\n  <div class=\"heading\">Click on user to chat</div>\n  <div class=\"text-center p-3\" *ngIf=\"loadingUsers\">\n    <i class=\"fa fa-spin fa-spinner\"></i>\n  </div>\n  <div class=\"box\" *ngIf=\"!loadingUsers\">\n    <ng-container *ngFor=\"let user of users\">\n      <button (click)=\"openChatBox(user)\" class=\"mr-2 btn btn-info\">\n        <i class=\"fa fa-user\"></i> {{user.first_name}} {{user.last_name}}\n      </button>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"chat-boxes-container\">\n  <div class=\"chat-box\" *ngFor=\"let chatBox of chatBoxes; let i = index\">\n    <div class=\"header\">\n      <div>{{chatBox.user.first_name}} {{chatBox.user.last_name}}</div>\n      <div>\n        <i class=\"fa fa-minus mr-3 c-pointer\" (click)=\"minimizeChatBox(i)\"></i>\n        <i class=\"fa fa-times c-pointer\" (click)=\"closeChatBox(i)\"></i>\n      </div>\n    </div>\n    <ng-container *ngIf=\"!chatBox.minimized\">\n      <div class=\"chat\">\n        <div class=\"message-box\" *ngFor=\"let message of chatBox.chat\">\n          <div class=\"heading\">{{message.from}}</div>\n          <div class=\"message\">{{message.message}}</div>\n        </div>\n      </div>\n      <div class=\"input-container\">\n        <input class=\"input\" (keydown.enter)=\"sendMessage(i)\"\n          placeholder=\"type message...\" name=\"currMsg\" [(ngModel)]=\"chatBox.currMessage\">\n      </div>\n    </ng-container>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SOCKET_ENDPOINT: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}